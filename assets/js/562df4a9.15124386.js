"use strict";(self.webpackChunkastrsk_ai_docs=self.webpackChunkastrsk_ai_docs||[]).push([[876],{2032:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"flow/what-is-the-flow","title":"What is a Flow?","description":"Concept","source":"@site/docs/flow/what-is-the-flow.md","sourceDirName":"flow","slug":"/flow/what-is-the-flow","permalink":"/astrsk-ai-docs/flow/what-is-the-flow","draft":false,"unlisted":false,"editUrl":"https://github.com/astrskai/astrsk-ai-docs/blob/main/docs/flow/what-is-the-flow.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Flow","permalink":"/astrsk-ai-docs/flow/"},"next":{"title":"Variable Reference","permalink":"/astrsk-ai-docs/flow/variable-reference"}}');var i=s(4848),r=s(8453);const o={sidebar_position:1},a="What is a Flow?",l={},d=[{value:"Concept",id:"concept",level:2},{value:"Basic Components",id:"basic-components",level:2},{value:"Node",id:"node",level:3},{value:"Edge",id:"edge",level:3},{value:"Variables",id:"variables",level:3},{value:"Example",id:"example",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"what-is-a-flow",children:"What is a Flow?"})}),"\n",(0,i.jsx)(n.h2,{id:"concept",children:"Concept"}),"\n",(0,i.jsx)(n.p,{children:"Flow is set of sequencially linked nodes that execute to create a response for a roleplay session.\nA flow has to be connected from the start node to the end node (with the agent nodes in between) for it to execute properly."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Concept",src:s(9264).A+"",width:"1323",height:"1039"})}),"\n",(0,i.jsx)(n.h2,{id:"basic-components",children:"Basic Components"}),"\n",(0,i.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,i.jsx)(n.p,{children:"A node is the basic execution unit of a flow. Nodes come in three types:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start node"}),": The start node is where the flow begins. ."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent node"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An agent calls an AI model and obtains an output that can be used later in other agents or in response design."}),"\n",(0,i.jsx)(n.li,{children:"Agents can take on different responsibities depending on the nature of the roleplay and the AI model used."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"End node"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The end node is where the flow ends."}),"\n",(0,i.jsx)(n.li,{children:"In the end node, users can use the response design feature to customize how the AI reponse in displayed during the roleplay session."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Node",src:s(5766).A+"",width:"1329",height:"1033"})}),"\n",(0,i.jsx)(n.h3,{id:"edge",children:"Edge"}),"\n",(0,i.jsx)(n.p,{children:"An edge is a connection line between nodes. Nodes are executed sequentially according to the edges connected from the start node to the end node.\nEdges serve the following roles:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Defines Execution Order"}),": Determines when each node will be executed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controls Data Flow"}),": Determines the path through which context/information is processed."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(n.p,{children:["Each node can utilize variables stored in the context using template syntax.\nVariables can be referenced in the form ",(0,i.jsx)(n.code,{children:"{{variable_name}}"})," and used in node input fields or prompts."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{char.name}}"}),": The name of the character currently being referenced or taking action in a roleplaying sequence."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{user.description}}"}),": The description of the character controlled by the user in a roleplay."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{session.entries}}"}),": A list of all retrieved character and plot entries."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"There are two types of variables in astrsk.ai:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"(System) variables"}),": Basic variables that is provided by the application. These can be used in any flow or card."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent output"}),": Output data from an agent node. Agent outputs are restricted to use within the flow where they were generated."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Variables",src:s(9763).A+"",width:"1326",height:"1034"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"Here's a simple flow example using two agents:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Start Node \u2192 Agent 1 (Input Analysis) \u2192 Agent 2 (Response Generation) \u2192 End Node\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Execution Process:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start Node"}),": Initial context setup (character information, conversation history, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent 1 (Input Analysis)"}),": Analyzes user input to generate ",(0,i.jsx)(n.code,{children:"{{user_intent}}"})," and ",(0,i.jsx)(n.code,{children:"{{context_summary}}"})," variables"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent 2 (Response Generation)"}),": Uses Agent 1's analysis results along with ",(0,i.jsx)(n.code,{children:"{{char.description}}"}),", ",(0,i.jsx)(n.code,{children:"{{char.example_dialog}}"}),", etc. to generate ",(0,i.jsx)(n.code,{children:"{{char_response}}"})," variable"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"End Node"}),": Outputs ",(0,i.jsx)(n.code,{children:"{{char_response}}"})," content as character message"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Context accumulates at each step, and the next node can utilize the results from previous nodes."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Example",src:s(6326).A+"",width:"1320",height:"1034"})}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.p,{children:["For a complete list of available variables and detailed information about each variable, please refer to the ",(0,i.jsx)(n.a,{href:"/flow/variable-reference",children:"Variable Reference"}),". Here you can find data types, usage methods, and examples for each variable."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5766:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/flow-node-ab49d6c4f876ab21ed08d60f3dd1794e.png"},6326:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/flow-example-ea87f2347abc00a816fdfff70fb40615.png"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9264:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/flow-concept-8020d0c6b81a49ad8f0c86dac673c0d3.png"},9763:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/flow-variables-d15b3df9d88b1d988c291e4018e8c19e.png"}}]);